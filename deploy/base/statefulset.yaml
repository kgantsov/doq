apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: doq
spec:
  serviceName: doq-internal
  replicas: 3
  selector:
    matchLabels:
      app: doq
  template:
    metadata:
      labels:
        app: doq
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      serviceAccountName: doq
      containers:
        - name: doq
          image: "kgantsov/doq:latest"
          command:
            - "/app"
            - "--cluster.service_name"
            - "doq"
            - "--http.port"
            - "8000"
            - "--grpc.address"
            - "0.0.0.0:10000"
            - "--raft.address"
            - "9000"
            - "--prometheus.enabled"
            - "true"
            - "--storage.data_dir"
            - "/usr/local/doq/data"
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: data
              mountPath: /usr/local/doq/data
          resources:
            requests:
              cpu: 1000m
              memory: 100Mi
            limits:
              cpu: 2000m
              memory: 1500Mi
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /readyz
              port: 8000
              scheme: HTTP
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2

  volumeClaimTemplates:
  - kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5Gi
      volumeMode: Filesystem
