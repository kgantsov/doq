// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.1
// source: pkg/proto/doq.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueSettings_Strategy int32

const (
	QueueSettings_STRATEGY_UNSPECIFIED QueueSettings_Strategy = 0
	QueueSettings_ROUND_ROBIN          QueueSettings_Strategy = 1
	QueueSettings_WEIGHTED             QueueSettings_Strategy = 2
)

// Enum value maps for QueueSettings_Strategy.
var (
	QueueSettings_Strategy_name = map[int32]string{
		0: "STRATEGY_UNSPECIFIED",
		1: "ROUND_ROBIN",
		2: "WEIGHTED",
	}
	QueueSettings_Strategy_value = map[string]int32{
		"STRATEGY_UNSPECIFIED": 0,
		"ROUND_ROBIN":          1,
		"WEIGHTED":             2,
	}
)

func (x QueueSettings_Strategy) Enum() *QueueSettings_Strategy {
	p := new(QueueSettings_Strategy)
	*p = x
	return p
}

func (x QueueSettings_Strategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueSettings_Strategy) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_proto_doq_proto_enumTypes[0].Descriptor()
}

func (QueueSettings_Strategy) Type() protoreflect.EnumType {
	return &file_pkg_proto_doq_proto_enumTypes[0]
}

func (x QueueSettings_Strategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueSettings_Strategy.Descriptor instead.
func (QueueSettings_Strategy) EnumDescriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{0, 0}
}

type QueueSettings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strategy      QueueSettings_Strategy `protobuf:"varint,1,opt,name=strategy,proto3,enum=queue.QueueSettings_Strategy" json:"strategy,omitempty"`
	MaxUnacked    uint32                 `protobuf:"varint,2,opt,name=max_unacked,json=maxUnacked,proto3" json:"max_unacked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueSettings) Reset() {
	*x = QueueSettings{}
	mi := &file_pkg_proto_doq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueSettings) ProtoMessage() {}

func (x *QueueSettings) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueSettings.ProtoReflect.Descriptor instead.
func (*QueueSettings) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{0}
}

func (x *QueueSettings) GetStrategy() QueueSettings_Strategy {
	if x != nil {
		return x.Strategy
	}
	return QueueSettings_STRATEGY_UNSPECIFIED
}

func (x *QueueSettings) GetMaxUnacked() uint32 {
	if x != nil {
		return x.MaxUnacked
	}
	return 0
}

type Queue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Settings      *QueueSettings         `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Queue) Reset() {
	*x = Queue{}
	mi := &file_pkg_proto_doq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{1}
}

func (x *Queue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Queue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Queue) GetSettings() *QueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         string                 `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Priority      int64                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_pkg_proto_doq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Message) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Message) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type SnapshotItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Item:
	//
	//	*SnapshotItem_Queue
	//	*SnapshotItem_Message
	Item          isSnapshotItem_Item `protobuf_oneof:"item"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotItem) Reset() {
	*x = SnapshotItem{}
	mi := &file_pkg_proto_doq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotItem) ProtoMessage() {}

func (x *SnapshotItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotItem.ProtoReflect.Descriptor instead.
func (*SnapshotItem) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotItem) GetItem() isSnapshotItem_Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *SnapshotItem) GetQueue() *Queue {
	if x != nil {
		if x, ok := x.Item.(*SnapshotItem_Queue); ok {
			return x.Queue
		}
	}
	return nil
}

func (x *SnapshotItem) GetMessage() *Message {
	if x != nil {
		if x, ok := x.Item.(*SnapshotItem_Message); ok {
			return x.Message
		}
	}
	return nil
}

type isSnapshotItem_Item interface {
	isSnapshotItem_Item()
}

type SnapshotItem_Queue struct {
	Queue *Queue `protobuf:"bytes,1,opt,name=queue,proto3,oneof"`
}

type SnapshotItem_Message struct {
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

func (*SnapshotItem_Queue) isSnapshotItem_Item() {}

func (*SnapshotItem_Message) isSnapshotItem_Item() {}

type CreateQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Settings      *QueueSettings         `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueueRequest) Reset() {
	*x = CreateQueueRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueRequest) ProtoMessage() {}

func (x *CreateQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueRequest.ProtoReflect.Descriptor instead.
func (*CreateQueueRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{4}
}

func (x *CreateQueueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateQueueRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateQueueRequest) GetSettings() *QueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CreateQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQueueResponse) Reset() {
	*x = CreateQueueResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQueueResponse) ProtoMessage() {}

func (x *CreateQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQueueResponse.ProtoReflect.Descriptor instead.
func (*CreateQueueResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{5}
}

func (x *CreateQueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueueRequest) Reset() {
	*x = DeleteQueueRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueRequest) ProtoMessage() {}

func (x *DeleteQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteQueueRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteQueueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQueueResponse) Reset() {
	*x = DeleteQueueResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQueueResponse) ProtoMessage() {}

func (x *DeleteQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQueueResponse.ProtoReflect.Descriptor instead.
func (*DeleteQueueResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteQueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueRequest) Reset() {
	*x = GetQueueRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueRequest) ProtoMessage() {}

func (x *GetQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueRequest.ProtoReflect.Descriptor instead.
func (*GetQueueRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{8}
}

func (x *GetQueueRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Stats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnqueueRPS    float64                `protobuf:"fixed64,1,opt,name=enqueueRPS,proto3" json:"enqueueRPS,omitempty"`
	DequeueRPS    float64                `protobuf:"fixed64,2,opt,name=dequeueRPS,proto3" json:"dequeueRPS,omitempty"`
	AckRPS        float64                `protobuf:"fixed64,3,opt,name=ackRPS,proto3" json:"ackRPS,omitempty"`
	NackRPS       float64                `protobuf:"fixed64,4,opt,name=nackRPS,proto3" json:"nackRPS,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stats) Reset() {
	*x = Stats{}
	mi := &file_pkg_proto_doq_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{9}
}

func (x *Stats) GetEnqueueRPS() float64 {
	if x != nil {
		return x.EnqueueRPS
	}
	return 0
}

func (x *Stats) GetDequeueRPS() float64 {
	if x != nil {
		return x.DequeueRPS
	}
	return 0
}

func (x *Stats) GetAckRPS() float64 {
	if x != nil {
		return x.AckRPS
	}
	return 0
}

func (x *Stats) GetNackRPS() float64 {
	if x != nil {
		return x.NackRPS
	}
	return 0
}

type GetQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Settings      *QueueSettings         `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	Stats         *Stats                 `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	Ready         int64                  `protobuf:"varint,5,opt,name=ready,proto3" json:"ready,omitempty"`     // Number of messages ready to be dequeued
	Unacked       int64                  `protobuf:"varint,6,opt,name=unacked,proto3" json:"unacked,omitempty"` // Number of messages that have been dequeued but not acknowledged
	Total         int64                  `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`     // Total number of messages in the queue
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueueResponse) Reset() {
	*x = GetQueueResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueueResponse) ProtoMessage() {}

func (x *GetQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueueResponse.ProtoReflect.Descriptor instead.
func (*GetQueueResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{10}
}

func (x *GetQueueResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetQueueResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetQueueResponse) GetSettings() *QueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *GetQueueResponse) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *GetQueueResponse) GetReady() int64 {
	if x != nil {
		return x.Ready
	}
	return 0
}

func (x *GetQueueResponse) GetUnacked() int64 {
	if x != nil {
		return x.Unacked
	}
	return 0
}

func (x *GetQueueResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetQueuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Optional filter by queue type
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueuesRequest) Reset() {
	*x = GetQueuesRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueuesRequest) ProtoMessage() {}

func (x *GetQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueuesRequest.ProtoReflect.Descriptor instead.
func (*GetQueuesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{11}
}

func (x *GetQueuesRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetQueuesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Queues        []*GetQueueResponse    `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQueuesResponse) Reset() {
	*x = GetQueuesResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueuesResponse) ProtoMessage() {}

func (x *GetQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueuesResponse.ProtoReflect.Descriptor instead.
func (*GetQueuesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{12}
}

func (x *GetQueuesResponse) GetQueues() []*GetQueueResponse {
	if x != nil {
		return x.Queues
	}
	return nil
}

type EnqueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Group         string                 `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"`
	Priority      int64                  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueRequest) Reset() {
	*x = EnqueueRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueRequest) ProtoMessage() {}

func (x *EnqueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueRequest.ProtoReflect.Descriptor instead.
func (*EnqueueRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{13}
}

func (x *EnqueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EnqueueRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EnqueueRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EnqueueRequest) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *EnqueueRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EnqueueRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type EnqueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	QueueName     string                 `protobuf:"bytes,2,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Priority      int64                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnqueueResponse) Reset() {
	*x = EnqueueResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnqueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueResponse) ProtoMessage() {}

func (x *EnqueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueResponse.ProtoReflect.Descriptor instead.
func (*EnqueueResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{14}
}

func (x *EnqueueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EnqueueResponse) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *EnqueueResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EnqueueResponse) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *EnqueueResponse) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *EnqueueResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EnqueueResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DequeueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Ack           bool                   `protobuf:"varint,2,opt,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueRequest) Reset() {
	*x = DequeueRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueRequest) ProtoMessage() {}

func (x *DequeueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueRequest.ProtoReflect.Descriptor instead.
func (*DequeueRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{15}
}

func (x *DequeueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *DequeueRequest) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

type DequeueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	QueueName     string                 `protobuf:"bytes,2,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Priority      int64                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueResponse) Reset() {
	*x = DequeueResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueResponse) ProtoMessage() {}

func (x *DequeueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueResponse.ProtoReflect.Descriptor instead.
func (*DequeueResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{16}
}

func (x *DequeueResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DequeueResponse) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *DequeueResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DequeueResponse) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *DequeueResponse) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *DequeueResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DequeueResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{17}
}

func (x *GetRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *GetRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	QueueName     string                 `protobuf:"bytes,2,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Group         string                 `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Priority      int64                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{18}
}

func (x *GetResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetResponse) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *GetResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetResponse) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetResponse) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *GetResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *DeleteRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{21}
}

func (x *AckRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *AckRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{22}
}

func (x *AckResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type NackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Priority      int64                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackRequest) Reset() {
	*x = NackRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackRequest) ProtoMessage() {}

func (x *NackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackRequest.ProtoReflect.Descriptor instead.
func (*NackRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{23}
}

func (x *NackRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *NackRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NackRequest) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *NackRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type NackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NackResponse) Reset() {
	*x = NackResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NackResponse) ProtoMessage() {}

func (x *NackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NackResponse.ProtoReflect.Descriptor instead.
func (*NackResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{24}
}

func (x *NackResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdatePriorityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queueName,proto3" json:"queueName,omitempty"`
	Id            uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Priority      int64                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePriorityRequest) Reset() {
	*x = UpdatePriorityRequest{}
	mi := &file_pkg_proto_doq_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePriorityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePriorityRequest) ProtoMessage() {}

func (x *UpdatePriorityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePriorityRequest.ProtoReflect.Descriptor instead.
func (*UpdatePriorityRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{25}
}

func (x *UpdatePriorityRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *UpdatePriorityRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePriorityRequest) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type UpdatePriorityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePriorityResponse) Reset() {
	*x = UpdatePriorityResponse{}
	mi := &file_pkg_proto_doq_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePriorityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePriorityResponse) ProtoMessage() {}

func (x *UpdatePriorityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_doq_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePriorityResponse.ProtoReflect.Descriptor instead.
func (*UpdatePriorityResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_doq_proto_rawDescGZIP(), []int{26}
}

func (x *UpdatePriorityResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_pkg_proto_doq_proto protoreflect.FileDescriptor

const file_pkg_proto_doq_proto_rawDesc = "" +
	"\n" +
	"\x13pkg/proto/doq.proto\x12\x05queue\"\xb0\x01\n" +
	"\rQueueSettings\x129\n" +
	"\bstrategy\x18\x01 \x01(\x0e2\x1d.queue.QueueSettings.StrategyR\bstrategy\x12\x1f\n" +
	"\vmax_unacked\x18\x02 \x01(\rR\n" +
	"maxUnacked\"C\n" +
	"\bStrategy\x12\x18\n" +
	"\x14STRATEGY_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vROUND_ROBIN\x10\x01\x12\f\n" +
	"\bWEIGHTED\x10\x02\"a\n" +
	"\x05Queue\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x120\n" +
	"\bsettings\x18\x03 \x01(\v2\x14.queue.QueueSettingsR\bsettings\"\xdc\x01\n" +
	"\aMessage\x12\x14\n" +
	"\x05group\x18\x01 \x01(\tR\x05group\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x03R\bpriority\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x128\n" +
	"\bmetadata\x18\x05 \x03(\v2\x1c.queue.Message.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\fSnapshotItem\x12$\n" +
	"\x05queue\x18\x01 \x01(\v2\f.queue.QueueH\x00R\x05queue\x12*\n" +
	"\amessage\x18\x02 \x01(\v2\x0e.queue.MessageH\x00R\amessageB\x06\n" +
	"\x04item\"n\n" +
	"\x12CreateQueueRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x120\n" +
	"\bsettings\x18\x03 \x01(\v2\x14.queue.QueueSettingsR\bsettings\"/\n" +
	"\x13CreateQueueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"(\n" +
	"\x12DeleteQueueRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"/\n" +
	"\x13DeleteQueueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"%\n" +
	"\x0fGetQueueRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"y\n" +
	"\x05Stats\x12\x1e\n" +
	"\n" +
	"enqueueRPS\x18\x01 \x01(\x01R\n" +
	"enqueueRPS\x12\x1e\n" +
	"\n" +
	"dequeueRPS\x18\x02 \x01(\x01R\n" +
	"dequeueRPS\x12\x16\n" +
	"\x06ackRPS\x18\x03 \x01(\x01R\x06ackRPS\x12\x18\n" +
	"\anackRPS\x18\x04 \x01(\x01R\anackRPS\"\xd6\x01\n" +
	"\x10GetQueueResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x120\n" +
	"\bsettings\x18\x03 \x01(\v2\x14.queue.QueueSettingsR\bsettings\x12\"\n" +
	"\x05stats\x18\x04 \x01(\v2\f.queue.StatsR\x05stats\x12\x14\n" +
	"\x05ready\x18\x05 \x01(\x03R\x05ready\x12\x18\n" +
	"\aunacked\x18\x06 \x01(\x03R\aunacked\x12\x14\n" +
	"\x05total\x18\a \x01(\x03R\x05total\"&\n" +
	"\x10GetQueuesRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"D\n" +
	"\x11GetQueuesResponse\x12/\n" +
	"\x06queues\x18\x01 \x03(\v2\x17.queue.GetQueueResponseR\x06queues\"\x88\x02\n" +
	"\x0eEnqueueRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\x12\x14\n" +
	"\x05group\x18\x03 \x01(\tR\x05group\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x03R\bpriority\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12?\n" +
	"\bmetadata\x18\x06 \x03(\v2#.queue.EnqueueRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa4\x02\n" +
	"\x0fEnqueueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1c\n" +
	"\tqueueName\x18\x02 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x04R\x02id\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x03R\bpriority\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12@\n" +
	"\bmetadata\x18\a \x03(\v2$.queue.EnqueueResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x0eDequeueRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x10\n" +
	"\x03ack\x18\x02 \x01(\bR\x03ack\"\xa4\x02\n" +
	"\x0fDequeueResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1c\n" +
	"\tqueueName\x18\x02 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x04R\x02id\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x03R\bpriority\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12@\n" +
	"\bmetadata\x18\a \x03(\v2$.queue.DequeueResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\n" +
	"GetRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\"\x9c\x02\n" +
	"\vGetResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1c\n" +
	"\tqueueName\x18\x02 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x03 \x01(\x04R\x02id\x12\x14\n" +
	"\x05group\x18\x04 \x01(\tR\x05group\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x03R\bpriority\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12<\n" +
	"\bmetadata\x18\a \x03(\v2 .queue.GetResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"=\n" +
	"\rDeleteRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\"*\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\":\n" +
	"\n" +
	"AckRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\"'\n" +
	"\vAckResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xd2\x01\n" +
	"\vNackRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x03R\bpriority\x12<\n" +
	"\bmetadata\x18\x04 \x03(\v2 .queue.NackRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"(\n" +
	"\fNackResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"a\n" +
	"\x15UpdatePriorityRequest\x12\x1c\n" +
	"\tqueueName\x18\x01 \x01(\tR\tqueueName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x04R\x02id\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\x03R\bpriority\"2\n" +
	"\x16UpdatePriorityResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xa9\x06\n" +
	"\x03DOQ\x12D\n" +
	"\vCreateQueue\x12\x19.queue.CreateQueueRequest\x1a\x1a.queue.CreateQueueResponse\x12D\n" +
	"\vDeleteQueue\x12\x19.queue.DeleteQueueRequest\x1a\x1a.queue.DeleteQueueResponse\x12;\n" +
	"\bGetQueue\x12\x16.queue.GetQueueRequest\x1a\x17.queue.GetQueueResponse\x12>\n" +
	"\tGetQueues\x12\x17.queue.GetQueuesRequest\x1a\x18.queue.GetQueuesResponse\x12:\n" +
	"\aEnqueue\x12\x15.queue.EnqueueRequest\x1a\x16.queue.EnqueueResponse\"\x00\x12D\n" +
	"\rEnqueueStream\x12\x15.queue.EnqueueRequest\x1a\x16.queue.EnqueueResponse\"\x00(\x010\x01\x12:\n" +
	"\aDequeue\x12\x15.queue.DequeueRequest\x1a\x16.queue.DequeueResponse\"\x00\x12D\n" +
	"\rDequeueStream\x12\x15.queue.DequeueRequest\x1a\x16.queue.DequeueResponse\"\x00(\x010\x01\x12.\n" +
	"\x03Get\x12\x11.queue.GetRequest\x1a\x12.queue.GetResponse\"\x00\x127\n" +
	"\x06Delete\x12\x14.queue.DeleteRequest\x1a\x15.queue.DeleteResponse\"\x00\x12,\n" +
	"\x03Ack\x12\x11.queue.AckRequest\x1a\x12.queue.AckResponse\x12/\n" +
	"\x04Nack\x12\x12.queue.NackRequest\x1a\x13.queue.NackResponse\x12M\n" +
	"\x0eUpdatePriority\x12\x1c.queue.UpdatePriorityRequest\x1a\x1d.queue.UpdatePriorityResponseB)Z'github.com/kgantsov/doq/pkg/proto;protob\x06proto3"

var (
	file_pkg_proto_doq_proto_rawDescOnce sync.Once
	file_pkg_proto_doq_proto_rawDescData []byte
)

func file_pkg_proto_doq_proto_rawDescGZIP() []byte {
	file_pkg_proto_doq_proto_rawDescOnce.Do(func() {
		file_pkg_proto_doq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_doq_proto_rawDesc), len(file_pkg_proto_doq_proto_rawDesc)))
	})
	return file_pkg_proto_doq_proto_rawDescData
}

var file_pkg_proto_doq_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_proto_doq_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_pkg_proto_doq_proto_goTypes = []any{
	(QueueSettings_Strategy)(0),    // 0: queue.QueueSettings.Strategy
	(*QueueSettings)(nil),          // 1: queue.QueueSettings
	(*Queue)(nil),                  // 2: queue.Queue
	(*Message)(nil),                // 3: queue.Message
	(*SnapshotItem)(nil),           // 4: queue.SnapshotItem
	(*CreateQueueRequest)(nil),     // 5: queue.CreateQueueRequest
	(*CreateQueueResponse)(nil),    // 6: queue.CreateQueueResponse
	(*DeleteQueueRequest)(nil),     // 7: queue.DeleteQueueRequest
	(*DeleteQueueResponse)(nil),    // 8: queue.DeleteQueueResponse
	(*GetQueueRequest)(nil),        // 9: queue.GetQueueRequest
	(*Stats)(nil),                  // 10: queue.Stats
	(*GetQueueResponse)(nil),       // 11: queue.GetQueueResponse
	(*GetQueuesRequest)(nil),       // 12: queue.GetQueuesRequest
	(*GetQueuesResponse)(nil),      // 13: queue.GetQueuesResponse
	(*EnqueueRequest)(nil),         // 14: queue.EnqueueRequest
	(*EnqueueResponse)(nil),        // 15: queue.EnqueueResponse
	(*DequeueRequest)(nil),         // 16: queue.DequeueRequest
	(*DequeueResponse)(nil),        // 17: queue.DequeueResponse
	(*GetRequest)(nil),             // 18: queue.GetRequest
	(*GetResponse)(nil),            // 19: queue.GetResponse
	(*DeleteRequest)(nil),          // 20: queue.DeleteRequest
	(*DeleteResponse)(nil),         // 21: queue.DeleteResponse
	(*AckRequest)(nil),             // 22: queue.AckRequest
	(*AckResponse)(nil),            // 23: queue.AckResponse
	(*NackRequest)(nil),            // 24: queue.NackRequest
	(*NackResponse)(nil),           // 25: queue.NackResponse
	(*UpdatePriorityRequest)(nil),  // 26: queue.UpdatePriorityRequest
	(*UpdatePriorityResponse)(nil), // 27: queue.UpdatePriorityResponse
	nil,                            // 28: queue.Message.MetadataEntry
	nil,                            // 29: queue.EnqueueRequest.MetadataEntry
	nil,                            // 30: queue.EnqueueResponse.MetadataEntry
	nil,                            // 31: queue.DequeueResponse.MetadataEntry
	nil,                            // 32: queue.GetResponse.MetadataEntry
	nil,                            // 33: queue.NackRequest.MetadataEntry
}
var file_pkg_proto_doq_proto_depIdxs = []int32{
	0,  // 0: queue.QueueSettings.strategy:type_name -> queue.QueueSettings.Strategy
	1,  // 1: queue.Queue.settings:type_name -> queue.QueueSettings
	28, // 2: queue.Message.metadata:type_name -> queue.Message.MetadataEntry
	2,  // 3: queue.SnapshotItem.queue:type_name -> queue.Queue
	3,  // 4: queue.SnapshotItem.message:type_name -> queue.Message
	1,  // 5: queue.CreateQueueRequest.settings:type_name -> queue.QueueSettings
	1,  // 6: queue.GetQueueResponse.settings:type_name -> queue.QueueSettings
	10, // 7: queue.GetQueueResponse.stats:type_name -> queue.Stats
	11, // 8: queue.GetQueuesResponse.queues:type_name -> queue.GetQueueResponse
	29, // 9: queue.EnqueueRequest.metadata:type_name -> queue.EnqueueRequest.MetadataEntry
	30, // 10: queue.EnqueueResponse.metadata:type_name -> queue.EnqueueResponse.MetadataEntry
	31, // 11: queue.DequeueResponse.metadata:type_name -> queue.DequeueResponse.MetadataEntry
	32, // 12: queue.GetResponse.metadata:type_name -> queue.GetResponse.MetadataEntry
	33, // 13: queue.NackRequest.metadata:type_name -> queue.NackRequest.MetadataEntry
	5,  // 14: queue.DOQ.CreateQueue:input_type -> queue.CreateQueueRequest
	7,  // 15: queue.DOQ.DeleteQueue:input_type -> queue.DeleteQueueRequest
	9,  // 16: queue.DOQ.GetQueue:input_type -> queue.GetQueueRequest
	12, // 17: queue.DOQ.GetQueues:input_type -> queue.GetQueuesRequest
	14, // 18: queue.DOQ.Enqueue:input_type -> queue.EnqueueRequest
	14, // 19: queue.DOQ.EnqueueStream:input_type -> queue.EnqueueRequest
	16, // 20: queue.DOQ.Dequeue:input_type -> queue.DequeueRequest
	16, // 21: queue.DOQ.DequeueStream:input_type -> queue.DequeueRequest
	18, // 22: queue.DOQ.Get:input_type -> queue.GetRequest
	20, // 23: queue.DOQ.Delete:input_type -> queue.DeleteRequest
	22, // 24: queue.DOQ.Ack:input_type -> queue.AckRequest
	24, // 25: queue.DOQ.Nack:input_type -> queue.NackRequest
	26, // 26: queue.DOQ.UpdatePriority:input_type -> queue.UpdatePriorityRequest
	6,  // 27: queue.DOQ.CreateQueue:output_type -> queue.CreateQueueResponse
	8,  // 28: queue.DOQ.DeleteQueue:output_type -> queue.DeleteQueueResponse
	11, // 29: queue.DOQ.GetQueue:output_type -> queue.GetQueueResponse
	13, // 30: queue.DOQ.GetQueues:output_type -> queue.GetQueuesResponse
	15, // 31: queue.DOQ.Enqueue:output_type -> queue.EnqueueResponse
	15, // 32: queue.DOQ.EnqueueStream:output_type -> queue.EnqueueResponse
	17, // 33: queue.DOQ.Dequeue:output_type -> queue.DequeueResponse
	17, // 34: queue.DOQ.DequeueStream:output_type -> queue.DequeueResponse
	19, // 35: queue.DOQ.Get:output_type -> queue.GetResponse
	21, // 36: queue.DOQ.Delete:output_type -> queue.DeleteResponse
	23, // 37: queue.DOQ.Ack:output_type -> queue.AckResponse
	25, // 38: queue.DOQ.Nack:output_type -> queue.NackResponse
	27, // 39: queue.DOQ.UpdatePriority:output_type -> queue.UpdatePriorityResponse
	27, // [27:40] is the sub-list for method output_type
	14, // [14:27] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_proto_doq_proto_init() }
func file_pkg_proto_doq_proto_init() {
	if File_pkg_proto_doq_proto != nil {
		return
	}
	file_pkg_proto_doq_proto_msgTypes[3].OneofWrappers = []any{
		(*SnapshotItem_Queue)(nil),
		(*SnapshotItem_Message)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_doq_proto_rawDesc), len(file_pkg_proto_doq_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_doq_proto_goTypes,
		DependencyIndexes: file_pkg_proto_doq_proto_depIdxs,
		EnumInfos:         file_pkg_proto_doq_proto_enumTypes,
		MessageInfos:      file_pkg_proto_doq_proto_msgTypes,
	}.Build()
	File_pkg_proto_doq_proto = out.File
	file_pkg_proto_doq_proto_goTypes = nil
	file_pkg_proto_doq_proto_depIdxs = nil
}
