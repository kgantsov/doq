syntax = "proto3";

package queue;

option go_package = "github.com/kgantsov/doq/pkg/proto;proto";

service DOQ {
    rpc CreateQueue(CreateQueueRequest) returns (CreateQueueResponse);
    rpc DeleteQueue(DeleteQueueRequest) returns (DeleteQueueResponse);

    rpc Enqueue(EnqueueRequest) returns (EnqueueResponse) {}
    rpc EnqueueStream(stream EnqueueRequest) returns (stream EnqueueResponse) {}

    rpc Dequeue(DequeueRequest) returns (DequeueResponse) {}
    rpc DequeueStream(DequeueRequest) returns (stream DequeueResponse) {}

    rpc Get(GetRequest) returns (GetResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    rpc Ack(AckRequest) returns (AckResponse);
    rpc Nack(NackRequest) returns (NackResponse);
    rpc UpdatePriority(UpdatePriorityRequest) returns (UpdatePriorityResponse);
}

message CreateQueueRequest {
    string name = 1;
    string type = 2;
}

message CreateQueueResponse {
    bool success = 1;
}

message DeleteQueueRequest {
    string name = 1;
}

message DeleteQueueResponse {
    bool success = 1;
}

message EnqueueRequest {
    string queueName = 1;
    string group = 2;
    int64 priority = 3;
    string content = 4;
    map<string, string> metadata = 5;
}

message EnqueueResponse {
    bool success = 1;
    string queueName = 2;
    uint64 id = 3;
    string group = 4;
    int64 priority = 5;
    string content = 6;
    map<string, string> metadata = 7;
}

message DequeueRequest {
    string queueName = 1;
    bool ack = 2;
}

message DequeueResponse {
    bool success = 1;
    string queueName = 2;
    uint64 id = 3;
    string group = 4;
    int64 priority = 5;
    string content = 6;
    map<string, string> metadata = 7;
}

message GetRequest {
    string queueName = 1;
    uint64 id = 2;
}

message GetResponse {
    bool success = 1;
    string queueName = 2;
    uint64 id = 3;
    string group = 4;
    int64 priority = 5;
    string content = 6;
    map<string, string> metadata = 7;
}

message DeleteRequest {
    string queueName = 1;
    uint64 id = 2;
}

message DeleteResponse {
    bool success = 1;
}

message AckRequest {
    string queueName = 1;
    uint64 id = 2;
}

message AckResponse {
    bool success = 1;
}

message NackRequest {
    string queueName = 1;
    uint64 id = 2;
    map<string, string> metadata = 3;
}

message NackResponse {
    bool success = 1;
}

message UpdatePriorityRequest {
    string queueName = 1;
    uint64 id = 2;
    int64 priority = 3;
}

message UpdatePriorityResponse {
    bool success = 1;
}
